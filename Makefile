# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make test - run all the tests
#
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.


# Where to install libraries for Arduino
ARDUINO_LIBRARIES_DIR = $(HOME)/Documents/Arduino/libraries

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = vendor/googletest-release-1.8.0/googletest

# Where to find project code.
SRC_DIR = src

# Where to find tests.
TESTS_DIR = tests

# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -I $(TESTS_DIR) -I $(SRC_DIR)

CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11

# Each test suite becomes an executable file.
TEST_SUITES = test_fib test_blinking_thing test_keyboard_matrix test_keyboard_cortex

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : test

test: $(TEST_SUITES)
	for i in $(TEST_SUITES); do ./$$i; done

clean :
	rm -f $(TEST_SUITES) gtest.a gtest_main.a *.o

install:
	mkdir -p $(ARDUINO_LIBRARIES_DIR)/blinking_thing
	cp -p $(SRC_DIR)/blinking_thing.cpp $(SRC_DIR)/blinking_thing.h $(SRC_DIR)/hardware_traits.h $(ARDUINO_LIBRARIES_DIR)/blinking_thing


# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^


# Code the for the firmware uses .cpp suffix because Arduino code expects it.

fib.o: $(SRC_DIR)/fib.cpp $(SRC_DIR)/fib.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/fib.cpp

test_fib.o: $(TESTS_DIR)/test_fib.cpp  $(SRC_DIR)/fib.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TESTS_DIR)/test_fib.cpp

test_fib: fib.o test_fib.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@


blinking_thing.o: $(SRC_DIR)/blinking_thing.cpp $(SRC_DIR)/blinking_thing.h $(TESTS_DIR)/Arduino.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/blinking_thing.cpp

test_blinking_thing.o: $(TESTS_DIR)/test_blinking_thing.cpp  $(SRC_DIR)/blinking_thing.h $(TESTS_DIR)/Arduino.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TESTS_DIR)/test_blinking_thing.cpp

test_blinking_thing: blinking_thing.o test_blinking_thing.o Arduino.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@


keyboard_matrix.o: $(SRC_DIR)/keyboard_matrix.cpp $(SRC_DIR)/keyboard_matrix.h $(TESTS_DIR)/Arduino.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/keyboard_matrix.cpp

test_keyboard_matrix.o: $(TESTS_DIR)/test_keyboard_matrix.cpp  $(SRC_DIR)/keyboard_matrix.h $(TESTS_DIR)/Arduino.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TESTS_DIR)/test_keyboard_matrix.cpp

test_keyboard_matrix: keyboard_matrix.o test_keyboard_matrix.o Arduino.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@


keyboard_cortex.o: $(SRC_DIR)/keyboard_cortex.cpp $(SRC_DIR)/keyboard_cortex.h $(TESTS_DIR)/Arduino.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/keyboard_cortex.cpp

test_keyboard_cortex.o: $(TESTS_DIR)/test_keyboard_cortex.cpp  $(SRC_DIR)/keyboard_cortex.h $(TESTS_DIR)/Arduino.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TESTS_DIR)/test_keyboard_cortex.cpp

test_keyboard_cortex: keyboard_cortex.o test_keyboard_cortex.o Arduino.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@


Arduino.o: $(TESTS_DIR)/Arduino.h $(TESTS_DIR)/Arduino.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TESTS_DIR)/Arduino.cpp

